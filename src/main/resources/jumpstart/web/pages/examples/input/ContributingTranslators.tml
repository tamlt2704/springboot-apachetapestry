<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- We need a doctype to allow us to use special characters like &nbsp;
     We use a "strict" DTD to make IE follow the alignment rules. -->

<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd">
<body class="container">
    <h3>Contributing Translators</h3>

    Here we create two Translators and make them available to the whole application <strong>by name</strong>.

    <div class="eg">
        <t:form class="form-horizontal" t:id="inputs">
            <div class="form-group">
                <t:label for="newToTapestry" class="col-sm-3"/>
                <div class="col-sm-3">
                    <t:textfield t:id="newToTapestry" t:translate="yesno"/>
                </div>
                <div class="col-sm-6">
                    <p class="form-control-static">
                        ${newToTapestry}
                        &nbsp;&nbsp;
                        <span class="text-muted">(y, n, yes, no)</span>
                    </p>
                </div>
            </div>
            <div class="form-group">
                <t:label for="price" class="col-sm-3"/>
                <div class="col-sm-3">
                    <t:textfield t:id="price" t:translate="money2"/>
                </div>
                <div class="col-sm-6">
                    <p class="form-control-static">
                        ${price}
                        &nbsp;&nbsp;
                        <span class="text-muted">(maximum 2 decimal places)</span>
                    </p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-3 col-sm-offset-3">
                    <t:submit/>
                </div>
            </div>
        </t:form>
    </div>

    The first translator is called <em>yesno</em> and its class is <code>YesNoTranslator</code>.<br/>
    It parses "y", "n", "yes", and "no" (ignoring case), client-side, to Boolean, server-side, and back to "yes" or "no", client-side.<br/><br/>

    The second translator is called <em>money2</em> and its class is <code>MoneyTranslator</code>.<br/>
    It parses a String, client-side, to a BigDecimal with maximum of 2 decimal places, server-side, and vice-versa.<br/><br/>

    We made both translators available to the whole application by contributing them to the <code>TranslatorAlternatesSource</code>
    service - see AppModule source below.

    Alternatively, a translator can be made available to the whole application and selected <strong>automatically</strong> based on the type
    that it translates, by contributing it to the <code>TranslatorSource</code> service.<br/><br/>

    This example has also used localization, which is explained later in the Localization examples.<br/><br/>

    References:
    <a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/Translator.html">Translator</a>,
    <a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/services/TranslatorSource.html">TranslatorSource</a>,
    <a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/services/TranslatorAlternatesSource.html">TranslatorAlternatesSource</a>,
    <a href="http://tapestry.apache.org/5.4/apidocs/org/apache/tapestry5/services/messages/ComponentMessagesSource.html">ComponentMessagesSource</a>,
    <a href="http://tapestry.apache.org/defining-tapestry-ioc-services.html">Defining Tapestry IoC Services</a>.<br/><br/>

    <t:pagelink page="Index">Home</t:pagelink><br/><br/>
</body>
</html>